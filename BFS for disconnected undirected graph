#include <bits/stdc++.h>
using namespace std;
void bfs(int index,map<int,vector<int>> &adj, vector<int> &visited, vector<int>&v)
{
    queue<int>q;
    q.push(index);
    visited[index]=1;

    while(q.empty()==false)
    {
        int f = q.front();
        q.pop();
        v.push_back(f);
        for(int x : adj[f]){
            if(visited[x] == 0){
                q.push(x);
                visited[x] = 1;
            }
        }
    }
}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<int> visited(vertex, 0);
    vector<int>v;
    map<int, vector<int>> adj;
    for(auto x : edges){
        int u = x.first;
        int v = x.second;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(int i=0;i<vertex;i++)
    {
        if (visited[i] == 0) { // not visited
            bfs(i, adj, visited, v);
        }
    }
    
    return v;
}
