//this code is for representation of graph using adjancency list

#include <bits/stdc++.h>

using namespace std;

class graph
{
    public:
    
    unordered_map<int,list<int>>adj;
    
    void addedge(int u,int v,bool direction)
    {
        // direction==0 for undirected graph
        // direction==1 for directed graph
        
        adj[u].push_back(v);
        
        if(direction==0)
        {
            adj[v].push_back(u);
        }
    }
    
    void print(void)
    {
        for(auto i:adj)
        {
            cout<<i.first<<"->";
            for(auto j:i.second)
            {
                cout<<j<<" ";
            }
            cout<<endl;
        }
    }
};

int main()
{
    graph obj;
    int v,e;
    
    cout<<"enter the no. of vertices : ";
    cin>>v;
    cout<<"enter the no. of edges : ";
    cin>>e;
    
    for(int i=0;i<e;i++)
    {
        int u,v;
        cin>>u>>v;
        
        obj.addedge(u,v,0); //for undirected graph
    }
    
    
    obj.print();

    return 0;
}
